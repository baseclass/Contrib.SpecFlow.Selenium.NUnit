// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestApplication.UiTests
{
    using TechTalk.SpecFlow;
    using Autofac;
    using Autofac.Configuration;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CalculatorFeature")]
    public partial class CalculatorFeatureFeature
    {
        
        private OpenQA.Selenium.IWebDriver driver;
        
        private IContainer container;
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string _language;
        
#line 1 "CalculatorFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            var builder = new ContainerBuilder();
            builder.RegisterModule(new ConfigurationSettingsReader());
            this.container = builder.Build();
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CalculatorFeature", "In order to avoid silly mistakes \r\nAs a math idiot\r\nI want to be told the sum of " +
                    "two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
            try { System.Threading.Thread.Sleep(50); this.driver.Quit(); } catch (System.Exception) {}
            this.driver = null;
            ScenarioContext.Current.Remove("Driver");
            ScenarioContext.Current.Remove("Container");
            ScenarioContext.Current.Remove("Language");
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            if(this.driver != null)
                ScenarioContext.Current.Add("Driver", this.driver);
            if(this.container != null)
                ScenarioContext.Current.Add("Container", this.container);
            if(this._language != null)
                ScenarioContext.Current.Add("Language", this._language);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Basepage is Calculator")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="BasepageIsCalculator with Chrome")]
        [NUnit.Framework.TestCaseAttribute("IE", Category="IE", TestName="BasepageIsCalculator with IE")]
        [NUnit.Framework.TestCaseAttribute("Firefox", Category="Firefox", TestName="BasepageIsCalculator with Firefox")]
        public virtual void BasepageIsCalculator(string browser)
        {
InitializeSeleniumBrowser(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Basepage is Calculator", new string[] {
                        "Browser:Chrome",
                        "Browser:IE",
                        "Browser:Firefox"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I navigated to /", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Then("browser title is Calculator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Two Numbers")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "FR", "50", "70", "120", null, Category="Firefox,FR", TestName="AddTwoNumbers with Firefox,FR and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "COM", "50", "70", "120", null, Category="Firefox,COM", TestName="AddTwoNumbers with Firefox,COM and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "DE", "50", "70", "120", null, Category="Firefox,DE", TestName="AddTwoNumbers with Firefox,DE and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "FR", "50", "70", "120", null, Category="Chrome,FR", TestName="AddTwoNumbers with Chrome,FR and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "COM", "50", "70", "120", null, Category="Chrome,COM", TestName="AddTwoNumbers with Chrome,COM and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "DE", "50", "70", "120", null, Category="Chrome,DE", TestName="AddTwoNumbers with Chrome,DE and \"50\" ,\"70\" ,\"120\"")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "FR", "1", "10", "11", null, Category="Firefox,FR", TestName="AddTwoNumbers with Firefox,FR and \"1\" ,\"10\" ,\"11\"")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "COM", "1", "10", "11", null, Category="Firefox,COM", TestName="AddTwoNumbers with Firefox,COM and \"1\" ,\"10\" ,\"11\"")]
        [NUnit.Framework.TestCaseAttribute("Firefox", "DE", "1", "10", "11", null, Category="Firefox,DE", TestName="AddTwoNumbers with Firefox,DE and \"1\" ,\"10\" ,\"11\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "FR", "1", "10", "11", null, Category="Chrome,FR", TestName="AddTwoNumbers with Chrome,FR and \"1\" ,\"10\" ,\"11\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "COM", "1", "10", "11", null, Category="Chrome,COM", TestName="AddTwoNumbers with Chrome,COM and \"1\" ,\"10\" ,\"11\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "DE", "1", "10", "11", null, Category="Chrome,DE", TestName="AddTwoNumbers with Chrome,DE and \"1\" ,\"10\" ,\"11\"")]
        public virtual void AddTwoNumbers(string browser, string language, string summandOne, string summandTwo, string result, string[] exampleTags)
        {
InitializeSeleniumBrowserLanguage(browser,language);
            string[] @__tags = new string[] {
                    "Browser:Firefox",
                    "Browser:Chrome",
                    "Language:FR",
                    "Language:COM",
                    "Language:DE"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Two Numbers", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("I went to /", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And(string.Format("I have entered {0} into summandOne calculator", summandOne), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And(string.Format("I have entered {0} into summandTwo calculator", summandTwo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.When("I press add", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then(string.Format("the result should be {0} on the screen", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        private void InitializeSeleniumBrowser(string browser)
        {
            this.driver = this.container.ResolveNamed<OpenQA.Selenium.IWebDriver>(browser);
        }
        
        private void InitializeSeleniumBrowserLanguage(string browser, string language)
        {
            this.driver = this.container.ResolveNamed<OpenQA.Selenium.IWebDriver>(browser);
            this._language = language;
        }
    }
}
#pragma warning restore
#endregion
